import pandas as pd

df = pd.read_excel('asle.xlsx')
df['date'] = pd.to_datetime(df['date'])
df = df.sort_values('date').reset_index(drop=True)

intervalos = [
    ('2022-01-03', '2022-02-01'),
    ('2022-01-04', '2022-02-02'),
    ('2022-01-05', '2022-02-03'),
    ('2022-01-06', '2022-02-04'),
    ('2022-01-07', '2022-02-05'),
    ('2022-01-08', '2022-02-06'),
    ('2022-01-09', '2022-02-07'),
    ('2022-01-10', '2022-02-08'),
    ('2022-01-11', '2022-02-09'),
    ('2022-01-12', '2022-02-10'),
    ('2022-01-13', '2022-02-11'),
    ('2022-01-14', '2022-02-12'),
    ('2022-01-15', '2022-02-13'),
    ('2022-01-16', '2022-02-14'),
    ('2022-01-17', '2022-02-15'),
    ('2022-01-18', '2022-02-16'),
    ('2022-01-19', '2022-02-17'),
    ('2022-01-20', '2022-02-18'),
    ('2022-01-21', '2022-02-19'),
    ('2022-01-22', '2022-02-20'),
    ('2022-01-23', '2022-02-21'),
    ('2022-01-24', '2022-02-22'),
    ('2022-01-25', '2022-02-23'),
    ('2022-01-26', '2022-02-24'),
    ('2022-01-27', '2022-02-25')
]

window_size = 20
rows = []

for inicio_str, fim_str in intervalos:
    inicio = pd.to_datetime(inicio_str)
    fim = pd.to_datetime(fim_str)
    
    df_filtrado = df[(df['date'] >= inicio) & (df['date'] <= fim)].copy()
    
    # Limpa e converte coluna 'close'
    df_filtrado['close'] = df_filtrado['close'].astype(str).str.replace(',', '.', regex=False)
    df_filtrado['close'] = pd.to_numeric(df_filtrado['close'], errors='coerce')
    df_filtrado = df_filtrado.dropna(subset=['close'])
    
    close = df_filtrado['close'].tolist()
    
    if len(close) < window_size + 1:
        print(f"Dados insuficientes para intervalo {inicio_str} a {fim_str}")
        continue
    
    for i in range(len(close) - window_size):
        janela = close[i:i+window_size]
        proximo = close[i + window_size]
        subiu = 'Sim' if proximo > janela[-1] else 'NÃ£o'
        rows.append(janela + [subiu, f'{inicio_str} a {fim_str}'])

colunas = [f'Day {i+1}' for i in range(window_size)] + ['Subiu?', 'Intervalo']

df_resultado = pd.DataFrame(rows, columns=colunas)

df_resultado.to_excel('resultado.xlsx', index=False)
print("Arquivo Excel salvo como 'resultado.xlsx'")